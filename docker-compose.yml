version: '3.8'

services:
  dons-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dons-backend
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=dons-database-nl3z8n
      - DB_PORT=5432
      - DB_DATABASE=Dons
      - DB_USERNAME=postgres
      - DB_PASSWORD=9zctibtytwmv640w
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - dons-network
    depends_on:
      - dons-database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dons-backend.rule=Host(`api.dons.local`)"
      - "traefik.http.routers.dons-backend.entrypoints=web"
      - "traefik.http.services.dons-backend.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  dons-database:
    image: postgres:15
    container_name: dons-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: Dons
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 9zctibtytwmv640w
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./script-complet-dons.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dons-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Dons"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dons-network:
    driver: bridge

volumes:
  postgres_data:
